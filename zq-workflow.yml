name: CICD for capstone project security check

on:
  push:
    branches:  [ dev, "*"]

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was triggered by a capstone project ${{ github.event_name }} event"
      ##- run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    ##  - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  
  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Installation of Dependencies Commands
        run: npm install  
  npm-audit:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Scanning of Dependencies Commands
        run: npm audit --audit-level=high
  snyk-scan:
    name: Snyk Security Scan for capstone project
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
       - uses: actions/checkout@master
       - name: Run Snyk to check for vulnerabilities
         uses: snyk/actions/node@master
         env:
           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
         with:
          command: monitor
          args: --severity-threshold=high
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: 
      - snyk-scan
      - npm-audit
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}